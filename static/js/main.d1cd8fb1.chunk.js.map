{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","onSelect","onSearch","selectionOption","searchTodo","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","useState","user","setUser","loading","setLoading","useEffect","userId","result","href","email","name","App","setTodos","setSelectedTodoId","filterOption","setFilterOption","setSearchTodo","todoId","filteredTodos","useMemo","filter","toLowerCase","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1cd8fb1.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodo: (todoId: number) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {!todo.completed\n            ? <td className=\"is-vcentered\" />\n            : (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            )}\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                {\n                  selectedTodoId === todo.id\n                    ? <i className=\"far fa-eye-slash\" />\n                    : <i className=\"far fa-eye\" />\n                }\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  onSelect: (value: string) => void,\n  onSearch: (value: string) => void,\n  selectionOption: string,\n  searchTodo: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelect,\n  onSearch,\n  selectionOption,\n  searchTodo,\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onSelect(event.target.value);\n  };\n\n  const handleSearchTodo = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onSearch(event.target.value);\n  };\n\n  const handleClearInput = () => {\n    onSearch('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectionOption}\n            onChange={handleChange}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.Active}>Active</option>\n            <option value={Filter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchTodo}\n          onChange={handleSearchTodo}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchTodo && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  selectTodo: (todoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, selectTodo }) => {\n  const [user, setUser] = useState<User>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(selectedTodo.userId)\n      .then(result => {\n        setUser(result);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(0)}\n            >\n              {}\n            </button>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [filterOption, setFilterOption] = useState<string>(Filter.All);\n  const [searchTodo, setSearchTodo] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(result => {\n        setTodos(result);\n        setLoading(false);\n      });\n  }, []);\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const handleFilter = (value: string) => {\n    setFilterOption(value);\n  };\n\n  const handleSearch = (value: string) => {\n    setSearchTodo(value);\n  };\n\n  const getFilteredTodos = () => {\n    let filteredTodos = todos;\n\n    switch (filterOption) {\n      case Filter.Active:\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      case Filter.Completed:\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      case Filter.All:\n      default:\n        filteredTodos = todos;\n    }\n\n    return filteredTodos.filter(todo => {\n      return todo.title.toLowerCase().includes(searchTodo.toLowerCase());\n    });\n  };\n\n  const filteredTodos = useMemo(getFilteredTodos, [todos, filterOption, searchTodo]);\n\n  const selectedTodo = filteredTodos.find(todo => todo.id === selectedTodoId) || null;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onSelect={handleFilter}\n                onSearch={handleSearch}\n                selectionOption={filterOption}\n                searchTodo={searchTodo}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                selectTodo={selectTodo}\n                selectedTodoId={selectedTodoId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          selectTodo={selectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}